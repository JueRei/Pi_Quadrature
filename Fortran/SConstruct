# -*- mode:python; coding:utf-8; -*-

#  Calculation of π using quadrature.
#
#  Copyright © 2008–2013 Russel Winder

#### NB This will only work for SCons after 2.3.4 since the f08 extension does not work in SCons before
#### 2.3.5.

import os
import sys
sys.path.append('../site_scons')

from executablesupport import compileTargets, runTargets, addCompileTarget, addRunTarget, createHelp

fortranFlags = ['-O3', '-std=f2008', '-ffree-form', '-pedantic', '-Wall']

fortranEnvironment = Environment(tools=['gfortran', 'gnulink'], F08FLAGS=fortranFlags)

# Fedora Rawhide packaging does not put symbolic links to the executables into /usr/bin, so we must add the
# /usr/lib64/openmpi/bin directory to the path.
fedoraOpenMPIDirectory = '/usr/lib64/openmpi/bin'
if os.path.exists(fedoraOpenMPIDirectory):
    fortranEnvironment['ENV']['PATH'] += ':{}'.format(fedoraOpenMPIDirectory)

fortranOutput = fortranEnvironment.Object('output.f08')

def fortranRule(globPattern, compiler='gfortran', fortranflags=fortranFlags, linker='gfortran', linkflags=[], libpath=[], libs=[]):
    for item in Glob(globPattern):
        addRunTarget(fortranEnvironment,
            addCompileTarget(
                fortranEnvironment.Program(
                    os.path.splitext(item.name)[0], [item.name, fortranOutput],
                    F08=compiler, F08FLAGS=fortranflags, FORTRAN=linker, LINKFLAGS=linkflags, LIBPATH=libpath, LIBS=libs)))

fortranRule('pi_sequential*.f08')
for f in ('pi_doConcurrent*.f08', 'pi_openmp*.f08'):
    fortranRule(f, fortranflags=fortranFlags + ['-fopenmp'], libs=['gomp'])
fortranRule('pi_mpi*.f08', compiler='mpif90', linker='mpif90')
#fortranRule('pi_coarray*.f08', fortranflags=fortranFlags + ['-fcoarray=lib'], compiler='mpif90', linker='mpif90', libs=['caf_mpi'])
fortranRule('pi_coarray*.f08', fortranflags=fortranFlags + ['-fcoarray=single'])

Default(compileTargets)

Alias('runAll', runTargets)

Help(createHelp())
