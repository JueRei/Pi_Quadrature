# -*- mode:python; coding:utf-8; -*-

#  Calculation of π using quadrature.
#
#  Copyright © 2008–2013, 2015  Russel Winder

import os
import sys
sys.path.append('../site_scons')

from executablesupport import compileTargets, runTargets, addCompileTarget, addRunTarget, createHelp

compilationExtensions = ['cmi', 'cmx', 'o']

ocamlEnvironment = Environment(
    tools=[],
    ENV=os.environ,
)

for item in Glob('pi_*.ml'):
    root = os.path.splitext(item.name)[0]
    extraOptions = ''
    variant = root.split('_')[1]
    if variant == 'threads':
        extraOptions = '-thread -package threads'
    if variant == 'mpi':
        #  These programs get run as sequential ones from SCons.  Use the command "mpirun -np N . . . " to run the code on N processors.
        extraOptions = '-package mpi'
    addRunTarget(ocamlEnvironment,
        addCompileTarget(ocamlEnvironment.Command(root, ['output.ml', item.name], 'ocamlfind ocamlopt -o $TARGET -linkpkg -package unix {} $SOURCES'.format(extraOptions))))
    SideEffect([base + '.' + extension for base in [root, 'output'] for extension in compilationExtensions], root)

Default(compileTargets)

Alias('runAll', runTargets)

Help(createHelp())
